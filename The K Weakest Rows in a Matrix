class Solution {
    public int[] kWeakestRows(int[][] mat, int k) {
        int [] arr = new int [k];
        PriorityQueue<int []> pq = new PriorityQueue<>((a, b) -> {
            if (a[1] - b[1] == 0) return a[0] - b[0];
            return a[1] - b[1];
        });
                ;
        for (int i = 0; i < mat.length; ++i) {
            int ones = 0;
            for (int j = 0; j < mat[0].length; ++j) {
                if (mat[i][j] == 1) {
                    ones++;
                }
                else {
                    break;
                }
            }
            pq.add(new int [] {i, ones});
        }
        for (int i = 0; i < k; ++i) {
            arr[i] = pq.poll()[0];
        }
        return arr;
    }
}
