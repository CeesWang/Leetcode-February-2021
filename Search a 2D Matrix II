class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        for (int i = 0; i < matrix.length; ++i) {
            if (binarySearch(matrix[i], 0, matrix[i].length - 1, target)) {
                return true;
            }
        }
        return false;
    }
    public boolean binarySearch(int [] arr, int left, int right, int target) {
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (arr[mid] == target) {
                return true;
            }
            else if (arr[mid] < target) {
                left = mid + 1;
            }
            else {
                right = mid - 1;
            }
        }
        return false;
    }
}

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int rowLen = matrix.length - 1;
        int colLen = matrix[0].length - 1;
        int row = rowLen;
        int col = 0;
        
        while (row >= 0 && col <= colLen) {
            if (matrix[row][col] == target) return true;
            if (matrix[row][col] > target) {
                row--;
            }
            else {
                col++;
            }
        }
        return false;
    }
}
